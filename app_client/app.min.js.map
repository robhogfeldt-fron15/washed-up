{"version":3,"sources":["main.js","admin/admin.controller.js","home/home.controller.js","user/user.controller.js","common/services/authentication.service.js","common/services/data.service.js","common/services/machines.service.js","common/services/timeslots.service.js","common/services/users.service.js","auth/login/login.controller.js","auth/register/register.controller.js","common/directives/navigation/navigation.controller.js","common/directives/navigation/navigation.directive.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.min.js","sourcesContent":["(function () {\r\n\r\n  angular.module('meanApp', ['ngRoute']);\r\n\r\n  function config ($routeProvider, $locationProvider) {\r\n    $routeProvider\r\n      .when('/', {\r\n        templateUrl: 'home/home.view.html',\r\n        controller: 'homeCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/register', {\r\n        templateUrl: '/auth/register/register.view.html',\r\n        controller: 'registerCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/login', {\r\n        templateUrl: '/auth/login/login.view.html',\r\n        controller: 'loginCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/profile', {\r\n        templateUrl: '/admin/admin.view.html',\r\n        controller: 'adminCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/user', {\r\n        templateUrl: '/user/user.view.html',\r\n        controller: 'userCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .otherwise({redirectTo: '/'});\r\n\r\n    // use the HTML5 History API\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n  function run($rootScope, $location, authentication) {\r\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\r\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\r\n         $location.path('/');\r\n      } else if ($location.path() === '/user' && !authentication.isLoggedIn()) {\r\n         $location.path('/');\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .config(['$routeProvider', '$locationProvider', config])\r\n    .run(['$rootScope', '$location', 'authentication', run]);\r\n\r\n})();\r\n","(function() {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('adminCtrl', adminCtrl);\r\n\r\n  adminCtrl.$inject = ['$location', 'meanData', 'Machines', 'Users', 'Timeslot'];\r\n\r\n  function adminCtrl($location, meanData, Machines, Users, Timeslot) {\r\n    var vm = this;\r\n\r\n    vm.user = {};\r\n    vm.activeUser = {};\r\n\r\n    meanData.getProfile()\r\n      .success(function(data) {\r\n        vm.user = data;\r\n      })\r\n      .error(function(e) {\r\n        console.log(e);\r\n      });\r\n\r\n\r\n\r\n    vm.getMachines = function() {\r\n      Machines.getMachines()\r\n        .success(function(data) {\r\n          vm.machines = data;\r\n        });\r\n    }\r\n\r\n    vm.deleteMachine = function(id) {\r\n\r\n      Machines.deleteMachine(id)\r\n        .success(function(data) {\r\n          vm.machines = data;\r\n          vm.getMachines();\r\n        });\r\n    }\r\n\r\n    vm.createMachine = function(machine) {\r\n      console.log(machine);\r\n      Machines.createMachine(machine)\r\n        .success(function(data) {\r\n          vm.loading = false;\r\n          vm.getMachines();\r\n\r\n        });\r\n    }\r\n\r\n    vm.showUserStat = function(user) {\r\n      vm.activeUser = user;\r\n      Timeslot.getByUser(null, user._id)\r\n        .success(function(data) {\r\n          vm.userSlots = data.filter(function(user) {\r\n            return user.role !== 'admin'\r\n          })\r\n          console.log(data);\r\n        });\r\n    }\r\n\r\n    getUsers();\r\n\r\n  function getUsers() {\r\n    Users.getUsers()\r\n        .success(function(data) {\r\n          console.log(data);\r\n            vm.allUsers = data;\r\n\r\n        });\r\n      };\r\n\r\n    vm.getMachines();\r\n\r\n  }\r\n\r\n})();\r\n","(function() {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('homeCtrl', homeCtrl);\r\n\r\n    function homeCtrl () {\r\n      console.log('Home controller is running');\n\n      var vm = this;\r\n\r\n      // vm.add = function() {\r\n      //   alert('äää');\r\n      // }\r\n    }\r\n\r\n})();\r\n","(function() {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('userCtrl', userCtrl);\r\n\r\n  userCtrl.$inject = ['$location', 'meanData', 'Machines','Timeslot'];\r\n\r\n  function userCtrl($location, meanData, Machines, Timeslot) {\r\n    var vm = this;\r\n\r\n    vm.user = {};\r\n    vm.activeMachine = null;\r\n\r\n    vm.showSchedule = function(machine) {\r\n         vm.activeMachine = machine\r\n         console.log(machine);\r\n     };\r\n\r\n\r\n    meanData.getProfile()\r\n      .success(function(data) {\r\n        vm.user = data;\r\n        vm.bookings(vm.user._id)\r\n      })\r\n      .error(function(e) {\r\n        console.log(e);\r\n      });\r\n\r\n      getSlots();\r\n      getMachines();\r\n\r\n      vm.bookings = function(user) {\r\n\r\n        Timeslot.getByUser(null, user)\r\n          .success(function(data) {\r\n            vm.bookings = data;\r\n            console.log(data);\r\n          });\r\n      }\r\n\r\n\r\n     function getSlots() {\r\n       Timeslot.getTimeslots()\r\n           .success(function(data) {\r\n             console.log(data);\r\n               vm.allSlots = data;\r\n\r\n           });\r\n         };\r\n\r\n     function getMachines() {\r\n         Machines.getMachines()\r\n             .success(function(data) {\r\n                 vm.machines = data;\r\n                 console.log(vm.machines);\r\n                 vm.loading = false;\r\n             });\r\n           }\r\n\r\n\r\n        vm.checkDate = function() {\r\n\r\n          vm.slotArray = [];\r\n          vm.slotArray.push({name:\"morgon\", isTaken:false });\r\n          vm.slotArray.push({name:\"formiddag\", isTaken:false });\r\n          vm.slotArray.push({name:\"eftermiddag\", isTaken:false });\r\n          vm.slotArray.push({name:\"kvall\", isTaken:false });\r\n\r\n          var takenSlots = [];\r\n            Timeslot.getByMachine(vm.activeMachine._id)\r\n              .success(function(slots) {\r\n\r\n                  takenSlots = slots.filter(function(slot) {\r\n                    console.log(slot , vm.slot.date.toLocaleDateString());\r\n                    return slot.date === vm.slot.date.toLocaleDateString();\r\n                  });\r\n\r\n                   for (var i = 0; i < takenSlots.length; i++) {\r\n                    vm.slotArray.filter(function functionName(item) {\r\n                      if (item.name === takenSlots[i].slot ) {\r\n                         item.isTaken = true;\r\n                         return item;\r\n                     } else {\r\n                       return item;\r\n                     }\r\n                    })\r\n                  }\r\n                  console.log(takenSlots);\r\n              });\r\n\r\n        }\r\n\r\n        vm.bookSlot = function(slot) {\r\n\r\n        if (!vm.activeMachine || !vm.user || !vm.slot || !vm.slot.name ) {\r\n          alert('Fyll i alla fält');\r\n          return;\r\n        }\r\n\r\n\r\n         var slot = {\r\n           machineId: vm.activeMachine._id,\r\n           userId: vm.user._id,\r\n           date: vm.slot.date.toLocaleDateString(),\r\n           slot: vm.slot.name,\r\n           isTaken: true\r\n         }\r\n\r\n         Timeslot.createTimeslot(slot)\r\n         .success(function(data) {\r\n\r\n           vm.checkDate();\r\n           vm.activeMachine = null;\r\n           Timeslot.getByUser(null, vm.user._id)\r\n             .success(function(data) {\r\n               vm.bookings = data;\r\n               console.log(data);\r\n             }.bind(this));\r\n         });\r\n\r\n       }\r\n\r\n  }\r\n\r\n})();\r\n"," (function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('authentication', authentication);\r\n\r\n  authentication.$inject = ['$http', '$window'];\r\n  function authentication ($http, $window) {\r\n\r\n    var saveToken = function (token) {\r\n      $window.localStorage['mean-token'] = token;\r\n    };\r\n\r\n    var getToken = function () {\r\n      return $window.localStorage['mean-token'];\r\n    };\r\n\r\n    var isLoggedIn = function() {\r\n      var token = getToken();\r\n      var payload;\r\n\r\n      if(token){\r\n        payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n\r\n        return payload.exp > Date.now() / 1000;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    var currentUser = function() {\r\n      if(isLoggedIn()){\r\n        var token = getToken();\r\n        var payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n        console.log('payload',payload);\r\n        return {\r\n          email : payload.email,\r\n          name : payload.name,\r\n          role : payload.role\r\n        };\r\n      }\r\n    };\r\n\r\n    register = function(user) {\r\n      return $http.post('/api/register', user).success(function(data){\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    login = function(user) {\r\n      return $http.post('/api/login', user).success(function(data) {\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n\r\n\r\n    logout = function() {\r\n      $window.localStorage.removeItem('mean-token');\r\n    };\r\n\r\n    return {\r\n      currentUser : currentUser,\r\n      saveToken : saveToken,\r\n      getToken : getToken,\r\n      isLoggedIn : isLoggedIn,\r\n      register : register,\r\n      login : login,\r\n      logout : logout\r\n    };\r\n  }\r\n\r\n\r\n})();\r\n","(function() {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('meanData', meanData);\r\n\r\n  meanData.$inject = ['$http', 'authentication'];\r\n  function meanData ($http, authentication) {\r\n\r\n    var getProfile = function () {\r\n      return $http.get('/api/admin', {\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken()\r\n        }\r\n      });\r\n    };\r\n\r\n    return {\r\n      getProfile : getProfile\r\n    };\r\n  }\r\n\r\n})();\r\n","(function() {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('Machines', machines);\r\n\r\n  machines.$inject = ['$http', 'authentication'];\r\n  function machines ($http, authentication) {\r\n\r\n    var getMachines = function () {\r\n      \treturn $http.get('/api/machines');\r\n    };\r\n\r\n    var createMachine = function (machine) {\r\n      \treturn $http.post('/api/machines', machine);\r\n    };\r\n\r\n    var deleteMachine = function (id) {\r\n        return $http.delete('/api/machines/' + id);\r\n    };\r\n\r\n    return {\r\n      getMachines : getMachines,\r\n      createMachine : createMachine,\r\n      deleteMachine : deleteMachine\r\n    };\r\n  }\r\n\r\n})();\r\n","(function() {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('Timeslot', timeslots);\r\n\r\n  timeslots.$inject = ['$http', 'authentication'];\r\n  function timeslots ($http, authentication) {\r\n\r\n    var getTimeslots = function () {\r\n      \treturn $http.get('/api/timeslots');\r\n    };\r\n\r\n    var createTimeslot = function (timeslot) {\r\n        return $http.post('/api/timeslots', timeslot);\r\n    };\r\n\r\n    var getByMachine = function (machine) {\r\n      \treturn $http.get('/api/timeslots/' + machine);\r\n    };\r\n\r\n    var getByUser = function (machine, user) {\r\n        return $http.get('/api/timeslots/' + machine + '/' + user);\r\n    };\r\n\r\n    return {\r\n      getTimeslots : getTimeslots,\r\n      createTimeslot: createTimeslot,\r\n      getByMachine: getByMachine,\r\n      getByUser: getByUser,\r\n\r\n    };\r\n  }\r\n\r\n})();\r\n","(function() {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('Users', users);\r\n\r\n  users.$inject = ['$http', 'authentication'];\r\n  function users ($http, authentication) {\r\n\r\n    var getUsers = function () {\r\n      \treturn $http.get('/api/users');\r\n    };\r\n\r\n\r\n    return {\r\n      getUsers : getUsers\r\n    };\r\n  }\r\n\r\n})();\r\n","(function () {\r\n\r\n  angular\r\n  .module('meanApp')\r\n  .controller('loginCtrl', loginCtrl);\r\n\r\n  loginCtrl.$inject = ['$location', 'authentication'];\r\n  function loginCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.credentials = {\r\n      email : \"\",\r\n      password : \"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      authentication\r\n        .login(vm.credentials)\r\n        .error(function(err){\r\n          alert(err);\r\n        })\r\n        .then(function(res){\r\n          if (res.data.user.role === 'admin') {\r\n            $location.path('profile');\r\n          } else {\r\n            $location.path('user');\r\n          }\r\n\r\n        });\r\n    };\r\n\r\n  }\r\n\r\n})();\r\n","(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('registerCtrl', registerCtrl);\r\n\r\n  registerCtrl.$inject = ['$location', 'authentication'];\r\n  function registerCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.credentials = {\r\n      name : \"\",\r\n      email : \"\",\r\n      password : \"\",\r\n      role: ''\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      console.log('Submitting registration');\r\n      authentication\r\n        .register(vm.credentials)\r\n        .error(function(err){\r\n          alert(err);\r\n        })\r\n        .then(function(res){\r\n          if (res.data.user.role === 'admin') {\r\n            $location.path('profile');\r\n          } else {\r\n            $location.path('user');\r\n          }\r\n        });\r\n    };\r\n\r\n  }\r\n\r\n})();\r\n","(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('navigationCtrl', navigationCtrl);\r\n\r\n  navigationCtrl.$inject = ['$location','authentication'];\r\n  function navigationCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.isLoggedIn = authentication.isLoggedIn();\r\n\r\n    vm.currentUser = authentication.currentUser();\r\n\r\n    vm.logout = authentication.logout();\r\n\r\n\r\n\r\n  }\r\n\r\n})();\r\n","(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .directive('navigation', navigation);\r\n\r\n  function navigation () {\r\n    return {\r\n      restrict: 'EA',\r\n      templateUrl: '/common/directives/navigation/navigation.template.html',\r\n      controller: 'navigationCtrl as navvm'\r\n    };\r\n  }\r\n\r\n})();"],"sourceRoot":"/source/"}